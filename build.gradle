plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.bank'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.5'
	implementation 'com.itextpdf:itextpdf:5.5.13.3'
	implementation 'org.slf4j:slf4j-api:2.0.9'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['**/application/**',
							  '**/infrastructure/**',
							  '**/model/**',
							  '**/BankApplication**',
							  '**/mapper/**'])
		})
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
